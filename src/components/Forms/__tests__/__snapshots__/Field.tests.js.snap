// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Field test - form Field test - form: should properly display errors when validation fails 1`] = `
<BaseField
  error="invalid value"
  hasError={true}
  isHorizontal={false}
  label="sample label"
  onValueChange={
    [MockFunction] {
      "calls": Array [
        Array [
          "new value",
        ],
      ],
      "results": Array [
        Object {
          "isThrow": false,
          "value": undefined,
        },
      ],
    }
  }
  validators={
    Array [
      [Function],
      [Function],
    ]
  }
  value="sample value"
>
  <TextInput
    allowFontScaling={true}
    label="sample label"
    onChangeText={[Function]}
    onValueChange={
      [MockFunction] {
        "calls": Array [
          Array [
            "new value",
          ],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": undefined,
          },
        ],
      }
    }
    style={
      Array [
        Object {
          "backgroundColor": "rgba(255, 255, 255, 0)",
          "color": "#000000",
          "flex": 1,
          "fontSize": 14,
        },
        undefined,
      ]
    }
    validators={
      Array [
        [Function],
        [Function],
      ]
    }
    value="sample value"
  >
    sample children
  </TextInput>
</BaseField>
`;

exports[`Field test - form Field test - form: should render properly isRequired:false 1`] = `
<View
  style={
    Array [
      Object {
        "flexBasis": 150,
      },
      undefined,
      undefined,
    ]
  }
>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "#FFFFFF",
          "paddingHorizontal": 15,
          "paddingVertical": 10,
        },
        undefined,
        false,
      ]
    }
  >
    <View
      style={
        Object {
          "marginRight": 15,
        }
      }
    >
      <View
        style={Object {}}
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          numberOfLines={1}
          style={
            Array [
              Object {
                "backgroundColor": "rgba(255, 255, 255, 0)",
                "color": "rgb(30, 30, 30)",
                "fontSize": 14,
                "fontWeight": "300",
              },
              undefined,
            ]
          }
        >
          sample label
        </Text>
      </View>
    </View>
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flex": 1,
            "flexDirection": "row",
            "justifyContent": "space-between",
          },
          undefined,
        ]
      }
    >
      <TextInput
        allowFontScaling={true}
        label="sample label"
        onChangeText={[Function]}
        onValueChange={[MockFunction]}
        style={
          Array [
            Object {
              "backgroundColor": "rgba(255, 255, 255, 0)",
              "color": "#000000",
              "flex": 1,
              "fontSize": 14,
            },
            undefined,
          ]
        }
        validators={Array []}
        value="sample value"
      >
        sample children
      </TextInput>
    </View>
  </View>
</View>
`;

exports[`Field test - form Field test - form: should render properly isRequired:true 1`] = `
<View
  style={
    Array [
      Object {
        "flexBasis": 150,
      },
      undefined,
      undefined,
    ]
  }
>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "#FFFFFF",
          "paddingHorizontal": 15,
          "paddingVertical": 10,
        },
        undefined,
        false,
      ]
    }
  >
    <View
      style={
        Object {
          "marginRight": 15,
        }
      }
    >
      <View
        style={Object {}}
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          numberOfLines={1}
          style={
            Array [
              Object {
                "backgroundColor": "rgba(255, 255, 255, 0)",
                "color": "rgb(30, 30, 30)",
                "fontSize": 14,
                "fontWeight": "300",
              },
              undefined,
            ]
          }
        >
          sample label
        </Text>
      </View>
    </View>
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flex": 1,
            "flexDirection": "row",
            "justifyContent": "space-between",
          },
          undefined,
        ]
      }
    >
      <TextInput
        allowFontScaling={true}
        isRequired={true}
        label="sample label"
        onChangeText={[Function]}
        onValueChange={[MockFunction]}
        placeholder="required"
        style={
          Array [
            Object {
              "backgroundColor": "rgba(255, 255, 255, 0)",
              "color": "#000000",
              "flex": 1,
              "fontSize": 14,
            },
            undefined,
          ]
        }
        validators={Array []}
        value="sample value"
      >
        sample children
      </TextInput>
    </View>
  </View>
</View>
`;
