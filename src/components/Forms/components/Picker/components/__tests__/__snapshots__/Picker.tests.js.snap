// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PickerProvider Test - Form PickerProvider Test - Form: should render properly isVisible:false 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "flex": 1,
      }
    }
  >
    sample children
  </View>
</View>
`;

exports[`PickerProvider Test - Form PickerProvider Test - Form: should render properly isVisible:true 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "flex": 1,
      }
    }
  >
    sample children
  </View>
  <View
    ease="ease-out"
    style={
      Object {
        "backgroundColor": "rgba(0, 0, 0, 0.9)",
        "bottom": 0,
        "justifyContent": "flex-end",
        "left": 0,
        "opacity": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      accessible={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "flex": 1,
        }
      }
    />
    <View
      ease="ease-out"
      style={
        Object {
          "backgroundColor": "#FFFFFF",
          "opacity": 0,
          "paddingHorizontal": 25,
          "paddingVertical": 7.5,
          "transform": Array [
            Object {
              "translateY": 100,
            },
          ],
        }
      }
    >
      <View>
        <RCTPicker
          items={
            Array [
              Object {
                "label": "Not selected",
                "textColor": undefined,
                "value": undefined,
              },
              Object {
                "label": "sample",
                "textColor": undefined,
                "value": "test",
              },
            ]
          }
          onChange={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          selectedIndex={0}
          style={
            Array [
              Object {
                "height": 216,
              },
              undefined,
            ]
          }
        />
      </View>
    </View>
  </View>
</View>
`;
