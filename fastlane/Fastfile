# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

platform :ios do
  desc "Build and upload staging for testing"
  lane :staging do
    #get_certificates(
      #development: false,
      #username: ENV["APPLE_USERNAME"]
    #)

    #get_provisioning_profile(
      #adhoc: true,
      #username: ENV["APPLE_USERNAME"],
      #filename: "Staging.mobileprovision",
      #app_identifier: "org.localyyz.staging"
    #)

    build_ios_app(
      workspace: "./ios/localyyz.xcworkspace",
      scheme: "staging",
      configuration: "staging",
      silent: true,
      clean: true,
      output_directory: "./ios/build/staging",
      output_name: "localyyz.ipa",
      export_method: "ad-hoc",
      #skip_profile_detection: true,
      #export_options: {
        #method: "ad-hoc",
        #signingStyle: "manual",
        #provisioningProfiles: { 
          #"org.localyyz.dev" => "Development",
          #"org.localyyz.toronto" => "XC iOS: org.localyyz.toronto",
          #"org.localyyz.staging" => "Staging"
        #}
      #}
      export_xcargs: "-allowProvisioningUpdates"

    )

    appcenter_upload(
      api_token: ENV["CODE_PUSH_API_KEY"],
      owner_name: ENV["CODE_PUSH_OWNER_NAME"],
      app_name: "Localyyz-iOS",
      ipa: "./ios/build/staging/localyyz.ipa",
      group: "Collaborators",
    )
    
  end

  lane :build do |options|
    scheme = (options[:release] ? "release" : "staging")
    build_ios_app(
      workspace: "./ios/localyyz.xcworkspace",
      scheme: scheme,
      configuration: scheme,
      silent: true,
      clean: true,
      output_directory: "./ios/build/#{scheme}",
      output_name: "localyyz.ipa"
    )
  end

end
